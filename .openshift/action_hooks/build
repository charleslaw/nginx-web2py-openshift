#!/bin/bash
# This is a simple build script and will be executed on your CI system if 
# available.  Otherwise it will execute while your application is stopped
# before the deploy step.  This script gets executed directly, so it
# could be python, php, ruby, etc.

NGINX_DIR="$OPENSHIFT_DATA_DIR/nginx"
PYTHON_DIR="$OPENSHIFT_DATA_DIR/python-2.7"
VIRTUALENV_DIR="$OPENSHIFT_DATA_DIR/env"

# the following functions are used to check if the packages we use in this
# cartridge are already installed or not, and if they are not, installs them
function check_nginx_installed() {
	if [ -e $NGINX_DIR ]; then
		return
	fi

	local NGINX_DOWNLOAD_FILE="http://nginx.org/download/nginx-1.4.1.tar.gz"
	local PCRE_DOWNLOAD_FILE="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.32.tar.gz"

	local NGINX_OUT_DIR="$OPENSHIFT_TMP_DIR/nginx-1.4.1"
	local PCRE_OUT_DIR="$OPENSHIFT_TMP_DIR/pcre-8.32"

	cd $OPENSHIFT_TMP_DIR
	curl -L $NGINX_DOWNLOAD_FILE | tar xzf -
	curl -L $PCRE_DOWNLOAD_FILE | tar xzf -

	cd $NGINX_OUT_DIR
	./configure --prefix=$NGINX_DIR --with-http_ssl_module --with-pcre=$PCRE_OUT_DIR
	make; make install
}

function check_python_installed() {
	if [ -e $PYTHON_DIR ]; then
		return
	fi

	local PYTHON_DOWNLOAD_FILE="http://python.org/ftp/python/2.7.5/Python-2.7.5.tar.bz2"
	local PYTHON_OUT_DIR="$OPENSHIFT_TMP_DIR/Python-2.7.5"

	cd $OPENSHIFT_TMP_DIR
	curl -L $PYTHON_DOWNLOAD_FILE | tar xjf -

	cd $PYTHON_OUT_DIR
	./configure --prefix=$PYTHON_DIR
	make; make install
}

# I'm not calling this *installed because the virtualenv program is already
# installed in openshift. We'll just create the environment here, and tell it
# to use the newly installed Python
function check_virtualenv() {
	if [ -e $VIRTUALENV_DIR ]; then
		return
	fi

	virtualenv --no-site-packages --python="$PYTHON_DIR/bin/python2.7"
}

check_nginx_installed
check_python_installed
check_virtualenv
